AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: An AWS Lambda application that calls the Lambda API.
Resources:
  # Lambda Functions
  # Load all stocks from Stock table
  LoadAllStockSymbolsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: load-all-stock-symbols
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.stock.ScheduleStocksRequestHandler::handleRequest
      Runtime: java8
      Description: Get list of all available company symbols
      MemorySize: 512
      Timeout: 60
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Load all markets from Stock table
  LoadAllMarketsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: load-all-markets
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.market.ScheduleMarketsRequestHandler::handleRequest
      Runtime: java8
      Description: Get list of all available markets
      MemorySize: 512
      Timeout: 60
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Download stock data from Yahoo
  YahooParserLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: yahoo-stock-parser
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.stock.YahooParserHandler::handleRequest
      Runtime: java8
      Description: Get stock history data from Yahoo API
      MemorySize: 512
      Timeout: 600
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Update daily fields for specific stock
  UpdateDailyFieldsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-daily-stock-fields
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.stock.UpdateDailyFieldsHandler::handleRequest
      Runtime: java8
      Description: Update daily stock information from dynamodb
      MemorySize: 512
      Timeout: 600
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Update market daily fields
  UpdateDailyMarketFieldsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-daily-market-fields
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.market.UpdateDailyMarketsHandler::handleRequest
      Runtime: java8
      Description: Update daily market  information from dynamodb
      MemorySize: 512
      Timeout: 600
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Update market fields
  UpdateMarketFieldsLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: update-market-fields
      CodeUri: target/stocker-data-1.0.jar
      Handler: com.stocker.data.controller.market.UpdateMarketsHandler::handleRequest
      Runtime: java8
      Description: Update market information from dynamodb
      MemorySize: 512
      Timeout: 600
      Role:
        Fn::GetAtt: StockerDataApplicationRole.Arn
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AWSXrayWriteOnlyAccess
        - AWSLambdaVPCAccessExecutionRole
      Tracing: Active
  # Roles
  StockerDataApplicationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::244092297712:policy/stocker-data-dynamodb-policy
        - arn:aws:iam::244092297712:policy/stocker-data-step-functions
        - arn:aws:iam::244092297712:policy/service-role/AWSLambdaBasicExecutionRole-b8cef0c4-1121-440e-9f9f-cde9ea2fc412
  # Step Functions
  # Download new daily information for all stocks
  UpdateAllStocksStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Update-All-Stocks-Yahoo
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
          - |-
            {
              "StartAt": "Load stocks for update",
              "States": {
                "Load stocks for update": {
                  "Type": "Task",
                  "Resource": "${loadAllStocksArn}",
                  "Next": "Download All stocks"
                },
                "Download All stocks": {
                  "Type": "Map",
                  "InputPath": "$",
                  "MaxConcurrency": 0,
                  "Iterator": {
                    "StartAt": "Yahoo Parser",
                    "States": {
                      "Yahoo Parser": {
                        "Type": "Task",
                        "Resource": "${yahooParser}",
                        "End": true
                      }
                    }
                  },
                  "End": true
                }
              }
            }
          - {
              loadAllStocksArn: !GetAtt [ LoadAllStockSymbolsLambda, Arn ],
              yahooParser: !GetAtt [ YahooParserLambda, Arn ]
            }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # Update daily information for all stocks
  UpdateDailyFieldsForAllStocksStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Update-All-Daily-Fields-For-Stocks
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
        - |-
          {
            "StartAt": "Load stocks for update",
            "States": {
              "Load stocks for update": {
                "Type": "Task",
                "Resource": "${loadAllStocksArn}",
                "Next": "Update daily field for stock"
              },
              "Update daily field for stock": {
                "Type": "Map",
                "InputPath": "$",
                "MaxConcurrency": 0,
                "Iterator": {
                  "StartAt": "Update daily fields",
                  "States": {
                    "Update daily fields": {
                      "Type": "Task",
                      "Resource": "${updateDailyFields}",
                      "End": true
                    }
                  }
                },
                "End": true
              }
            }
          }
        - {
          loadAllStocksArn: !GetAtt [ LoadAllStockSymbolsLambda, Arn ],
          updateDailyFields: !GetAtt [ UpdateDailyFieldsLambda, Arn ]
        }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # Update daily information for all stocks
  UpdateDailyMarketsStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Update-All-Daily-Markets
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
        - |-
          {
            "StartAt": "Load markets for update",
            "States": {
              "Load markets for update": {
                "Type": "Task",
                "Resource": "${loadAllMarketsArn}",
                "Next": "Update daily markets"
              },
              "Update daily markets": {
                "Type": "Map",
                "InputPath": "$",
                "MaxConcurrency": 0,
                "Iterator": {
                  "StartAt": "Update daily market fields",
                  "States": {
                    "Update daily market fields": {
                      "Type": "Task",
                      "Resource": "${updateDailyMarketFields}",
                      "End": true
                    }
                  }
                },
                "End": true
              }
            }
          }
        - {
          updateDailyMarketFields: !GetAtt [ UpdateDailyMarketFieldsLambda, Arn ],
          updateMarketFields: !GetAtt [ UpdateMarketFieldsLambda, Arn ],
          loadAllMarketsArn: !GetAtt [ LoadAllMarketsLambda, Arn ]
        }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # Update daily information for all stocks
  UpdateSummaryMarketsStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Update-All-Summary-Markets
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
        - |-
          {
            "StartAt": "Load markets for update",
            "States": {
              "Load markets for update": {
                "Type": "Task",
                "Resource": "${loadAllMarketsArn}",
                "Next": "Update summary markets"
              },
              "Update summary markets": {
                "Type": "Map",
                "InputPath": "$",
                "MaxConcurrency": 0,
                "Iterator": {
                  "StartAt": "Update summary market fields",
                  "States": {
                    "Update summary market fields": {
                      "Type": "Task",
                      "Resource": "${updateMarketFields}",
                      "End": true
                    }
                  }
                },
                "End": true
              }
            }
          }
        - {
          updateMarketFields: !GetAtt [ UpdateMarketFieldsLambda, Arn ],
          loadAllMarketsArn: !GetAtt [ LoadAllMarketsLambda, Arn ]
        }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # Download and update daily information for all stocks
  UpdateAllStocksWithCalculationStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Daily-Download-and-update-all-stocks
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
        - |-
          {
            "StartAt": "Load stocks for update",
            "States": {
              "Load stocks for update": {
                "Type": "Task",
                "Resource": "${loadAllStocksArn}",
                "Next": "Download stocks data"
              },
              "Download stocks data": {
                "Type": "Map",
                "InputPath": "$",
                "MaxConcurrency": 0,
                "Iterator": {
                  "StartAt": "Yahoo Parser",
                  "States": {
                    "Yahoo Parser": {
                      "Type": "Task",
                      "Resource": "${yahooParser}",
                      "Next": "Update daily field for stock"
                    },
                      "Update daily field for stock": {
                        "Type": "Task",
                        "Resource": "${updateDailyFields}",
                        "End": true
                    }
                  }
                },
                "End": true
              }
            }
          }
        - {
          loadAllStocksArn: !GetAtt [ LoadAllStockSymbolsLambda, Arn ],
          yahooParser: !GetAtt [ YahooParserLambda, Arn ],
          updateDailyFields: !GetAtt [ UpdateDailyFieldsLambda, Arn ]
        }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # Download and update daily information for all stocks
  UpdateDailyAndSummaryMarketFieldsStepFunction:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: Update-daily-and-summary-market-fields
      LoggingConfiguration:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: arn:aws:logs:us-west-2:244092297712:log-group:stocker-data-yahoo-parser-pipeline:*
        IncludeExecutionData: True
        Level: ALL
      DefinitionString:
        !Sub
        - |-
          {
            "StartAt": "Update daily market fields",
            "States": {
              "Update daily market fields": {
                "Type": "Task",
                "Resource": "arn:aws:states:::states:startExecution",
                "Parameters": {
                  "StateMachineArn": "${dailyFieldsUpdate}"
                },
                "Next": "Update summary market fields"
              },
              "Update summary market fields": {
                "Type": "Task",
                "Resource": "arn:aws:states:::states:startExecution",
                "Parameters": {
                  "StateMachineArn": "${summaryFieldsUpdate}"
                },
                "End": true
              }
            }
          }
        - {
          dailyFieldsUpdate: !GetAtt [ UpdateDailyMarketsStepFunction, Arn ],
          summaryFieldsUpdate: !GetAtt [ UpdateSummaryMarketsStepFunction, Arn ]
        }
      RoleArn: arn:aws:iam::244092297712:role/service-role/StepFunctions-Update-All-Stocks-Yahoo-role-1e15a242
      Tags:
        - Key: "Name"
          Value: "Stocker"
  # DynamoDB tables
  # Table contain all symbols and companies names
  StockDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "symbol"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "symbol"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: "stock"
  # Table contain stock daily fields
  StockDailyValuesDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "symbol"
          AttributeType: "S"
        -
          AttributeName: "date_timestamp"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "symbol"
          KeyType: "HASH"
        -
          AttributeName: "date_timestamp"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
      TableName: "stock_daily_values"
  # Table contain market daily fields
  MarketDailyValuesDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "symbol"
          AttributeType: "S"
        -
          AttributeName: "date_timestamp"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "symbol"
          KeyType: "HASH"
        -
          AttributeName: "date_timestamp"
          KeyType: "RANGE"
      BillingMode: PAY_PER_REQUEST
      TableName: "market_daily_values"